;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; calculate pi - can't remember where this came from

(define (pi1 _)
    (define z 1)
    (define k 3)
    (define s -1.0)
    (define (f c & _) (if (< k 25000) (c c) ()));print (* z 4))))
    (f  (call/cc (lambda (cc) cc))
        (set! z (+ z (/ s k)))
        (set! k (+ k 2))
        (set! s (- s))
    )
)
(timeit pi1 1)

(define (pi2 & _)
    (define k 2)
    (define a 4)
    (define b 1)
    (define a1 12)
    (define b1 4)
    (define d ())
    (define d1 ())
    (define (next)
        (define p (* k k))
        (define q (+ (* k 2) 1))
        (set! k (+ k 1))
        (define t1 (+ (* p a) (* q a1)))
        (define t2 (+ (* p b) (* q b1)))
        (set! a a1)
        (set! b b1)
        (set! a1 t1)
        (set! b1 t2)
        (set! d (/ a b))
        (set! d1 (/ a1 b1))
        (while inner)
        (if
            (< k 20)
            #t
            ()
        )
    )
    (define (inner)
        (if
            (equal? d d1)
            (begin
                ;(print d)
                (set! a  (* 10 (% a b)))
                (set! a1 (* 10 (% a1 b1)))
                (set! d  (/ a b))
                (set! d1 (/ a1 b1))
                #t
            )
            ()
        )
    )
    (while next)
)
(timeit pi2 100)
